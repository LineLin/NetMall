<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd"> 

	<!-- 配置这个component-scan 的时候，会隐式的配置了下面2个bean
		AutowiredAnnotationBeanPostProcessor ：用于@Autowired标签为field注入依赖。
		CommonAnnotationBeanPostProcessor 
	-->
    <context:component-scan base-package="com.line.web.*"/>
	
	
	<!-- 配置注解式的Handler-
		spring 3.1之前使用的是下面两个
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
		spring 3.1之后默认注入的是
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	-->
	
	<!-- 默认配置注解式的Handler-->
	 <mvc:annotation-driven/>
	
	<!-- 配置视图处理器，用于处理controller返回的视图 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/> 
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
	</bean>
	
	<!-- 配置静态文件处理器 -->
	<mvc:resources location="/public/img/" mapping="public/img/**"/>
	<mvc:resources location="/public/js/" mapping="public/js/**"/>
	<mvc:resources location="/public/css/" mapping="public/css/**"/>
	<mvc:resources location="/public/file/" mapping="public/file/**"/>
	
</beans>